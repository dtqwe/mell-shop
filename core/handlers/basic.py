from aiogram import Router, F, types
from aiogram.types import Message, CallbackQuery, PreCheckoutQuery, SuccessfulPayment
from aiogram.filters import CommandStart
from core.keyboards.reply import menu
from core.keyboards.inline import get_inline_keyboard, get_products_keyboard, get_guarantee, get_contacts, shop_marci, shop_dawnbreaker, shop_dazzle, shop_scpectre, shop_snapfire
router = Router()
from run import bot, dp, YKASSA_TOKEN


@router.message(CommandStart())
async def command_start_handler(message: Message):
    await message.answer(f'''<b>
        üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MellqweShop! üåü

        üõí –£ –Ω–∞—Å –≤—ã –Ω–∞–π–¥–µ—Ç–µ —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä —Å–∫–∏–Ω–æ–≤ –Ω–∞ –≤—Å–µ –≤–∫—É—Å—ã –∏ –±—é–¥–∂–µ—Ç—ã. 

        üåà –ú—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –Ω–æ–≤–∏–Ω–∫–∏ –∏ —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å –≤–∞–º –≤ –≤—ã–±–æ—Ä–µ –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. üì± 

        üîΩ –î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ: üîΩ
        </b>''', parse_mode='HTML', reply_markup=get_inline_keyboard())
    
#------------------------------------SHOP-----------------------------------
@router.callback_query(F.data == 'shop')
async def shop(callback: CallbackQuery):
   # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    await callback.message.delete()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:', reply_markup=get_products_keyboard())

@router.callback_query(F.data == 'product_1')
async def product_1(callback: CallbackQuery):
   # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    await callback.message.delete()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    await callback.message.answer('–¶–µ–Ω–∞: 1000rub', reply_markup=shop_marci())

@router.callback_query(F.data == 'buy_marci')
async def buy_marci(callback: CallbackQuery):
   # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    await callback.message.delete()
    await bot.send_invoice(
        chat_id=callback.from_user.id,
        title='Marci Brightfist',
        description='–ö–æ–º–ø–ª–µ–∫—Ç, Mythical',
        provider_token=YKASSA_TOKEN,
        payload='buy_marci_pack',
        currency='RUB',
        start_parameter='test_bot',
        prices=[{'label': 'rub', 'amount': 100000}]
    )

@router.pre_checkout_query()
async def pre_checkout_query_handler(pre_checkout_query: types.PreCheckoutQuery):
    await bot.answer_callback_query(pre_checkout_query.id)

@dp.message_handler(content_types=ContentType.SUCCESSFUL_PAYMENT)
async def successful_payment(message: types.Message):
    successful_payment = message.successful_payment

    if successful_payment.invoice_payload == 'buy_marci_pack':
        # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        # –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
        await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∞.')
    
@router.callback_query(F.data == 'marci_back_to_shop')
async def marci_back_to_shop(callback: CallbackQuery):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (shop)
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:', reply_markup=get_products_keyboard())

    # –£–¥–∞–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await callback.message.edit_reply_markup(reply_markup=None)
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç "–¶–µ–Ω–∞: 1000rub"
    await callback.message.delete()


@router.callback_query(F.data == 'product_2')
async def product_2(callback: CallbackQuery):
   # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    await callback.message.delete()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    await callback.message.answer('–¶–µ–Ω–∞: 500rub', reply_markup=shop_scpectre())

@router.callback_query(F.data == 'scpectre_back_to_shop')
async def scpectre_back_to_shop(callback: CallbackQuery):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (shop)
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:', reply_markup=get_products_keyboard())

    # –£–¥–∞–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await callback.message.edit_reply_markup(reply_markup=None)
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç "–¶–µ–Ω–∞: 500rub"
    await callback.message.delete()

@router.callback_query(F.data == 'product_3')
async def product_3(callback: CallbackQuery):
   # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    await callback.message.delete()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    await callback.message.answer('–¶–µ–Ω–∞: 1000rub', reply_markup=shop_snapfire())

@router.callback_query(F.data == 'snapfire_back_to_shop')
async def snapfire_back_to_shop(callback: CallbackQuery):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (shop)
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:', reply_markup=get_products_keyboard())

    # –£–¥–∞–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await callback.message.edit_reply_markup(reply_markup=None)
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç "–¶–µ–Ω–∞: 1000rub"
    await callback.message.delete()

@router.callback_query(F.data == 'product_4')
async def product_4(callback: CallbackQuery):
   # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    await callback.message.delete()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    await callback.message.answer('–¶–µ–Ω–∞: 400rub', reply_markup=shop_dazzle())

@router.callback_query(F.data == 'dazzle_back_to_shop')
async def dazzle_back_to_shop(callback: CallbackQuery):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (shop)
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:', reply_markup=get_products_keyboard())

    # –£–¥–∞–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await callback.message.edit_reply_markup(reply_markup=None)
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç "–¶–µ–Ω–∞: 400rub"
    await callback.message.delete()

@router.callback_query(F.data == 'product_5')
async def product_5(callback: CallbackQuery):
   # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    await callback.message.delete()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    await callback.message.answer('–¶–µ–Ω–∞: 400rub', reply_markup=shop_dawnbreaker())

@router.callback_query(F.data == 'dawnbreaker_back_to_shop')
async def dawnbreaker_back_to_shop(callback: CallbackQuery):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (shop)
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:', reply_markup=get_products_keyboard())

    # –£–¥–∞–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await callback.message.edit_reply_markup(reply_markup=None)
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç "–¶–µ–Ω–∞: 400rub"
    await callback.message.delete()

@router.callback_query(F.data == 'shop_back_to_main')
async def shop_back_to_main(callback: CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if callback.message:
        await command_start_handler(callback.message)
        # –£–¥–∞–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await callback.message.edit_reply_markup(reply_markup=None)
        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:"
        await callback.message.delete()
#------------------------------------END SHOP-------------------------------

#------------------------------------PROFILE-----------------------------------
@router.callback_query(F.data == 'profile')
async def profile(callback: CallbackQuery):
    # –£–¥–∞–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await callback.message.edit_reply_markup(reply_markup=None)
#------------------------------------END PROFILE--------------------------------

#------------------------------------GUARANTEE----------------------------------
@router.callback_query(F.data == 'guarantee')
async def guarantee(callback: CallbackQuery):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    await callback.message.delete()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    await callback.message.answer('–í—Å–µ –æ—Ç–∑—ã–≤—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ –≤ —Ä–∞–∑–¥–µ–ª–µ –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ãüé≠', reply_markup=get_guarantee())

@router.callback_query(F.data == 'guarantee_back_to_main')
async def guarantee_back_to_main(callback: CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if callback.message:
        await command_start_handler(callback.message)
        # –£–¥–∞–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await callback.message.edit_reply_markup(reply_markup=None)
        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:"
        await callback.message.delete()
#------------------------------------END GUARANTEE------------------------------

#------------------------------------CONTACTS----------------------------------
@router.callback_query(F.data == 'contacts')
async def contacts(callback: CallbackQuery):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    await callback.message.delete()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    await callback.message.answer('üë§–ú–µ–Ω–µ–¥–∂–µ—Ä: @dtqwe\nüì¢–ù–∞—à –∫–∞–Ω–∞–ª: @mellqweshop', reply_markup=get_contacts())

@router.callback_query(F.data == 'contacts_back_to_main')
async def contacts_back_to_main(callback: CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if callback.message:
        await command_start_handler(callback.message)
        # –£–¥–∞–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await callback.message.edit_reply_markup(reply_markup=None)
        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:"
        await callback.message.delete()
#------------------------------------END CONTACTS------------------------------




